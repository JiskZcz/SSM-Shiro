<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.ssm.dao.roleMapper">
  <resultMap id="BaseResultMap" type="com.my.ssm.bean.role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
  </resultMap>
  <!-- 特地加个英文名 -->
  <resultMap id="BaseENResultMap" type="com.my.ssm.bean.role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ENname" jdbcType="VARCHAR" property="ENname"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name
  </sql>
  <select id="selectByExample" parameterType="com.my.ssm.bean.roleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!-- 模糊查询或全部查询 -->
  <select id="selectByLike"  resultMap="BaseResultMap">
    select * from role <where>
    <if test="queryText!=null">
      name like concat('%',#{queryText},'%')
    </if>
  </where>
  </select>
  <!-- 使用部门名查找是否有相同的部门 -->
  <select id="getByRoleName"  resultMap="BaseResultMap">
    select * from role where name = #{name}
  </select>
  <!-- 使用主键查找是否有相同的部门 -->
  <select id="getByRoleId"  resultMap="BaseResultMap">
    select * from role where id = #{id}
  </select>
  <!-- 更新 -->
  <update id="updateRole">
    update role set  name =#{name} where id=#{id}
  </update>
  <!-- 给角色添加相关权限 -->
  <insert id="insertRolePermission">
    insert into role_permission (roleid, permissionid) values
    <foreach collection="permissionids" item="permissionid" separator=",">
      ( #{roleid}, #{permissionid} )
    </foreach>
  </insert>
  <!-- 根据名字差对应角色 -->
  <select id="getByUserName" resultMap="BaseENResultMap">
    SELECT * FROM role WHERE
    id in (SELECT roleid FROM user_role WHERE userid in
    (SELECT id FROM USER WHERE NAME = #{userName}))
  </select>
  <!-- 删除角色的所有权限 -->
  <delete id="deleteRolePermissions">
    delete from role_permission where roleid = #{roleid}
  </delete>
  <!-- 删除一个职位 -->
  <delete id="deleteByPrimaryKey" >
    delete from role where id = #{id}
  </delete>
  <!-- 批量删除 -->
  <delete id="BatchDeleteRole">
    delete from role where id in <foreach close=")" collection="array" item="id"
                                          open="(" separator=",">
    #{id}
  </foreach>
  </delete>
  <delete id="deleteByExample" parameterType="com.my.ssm.bean.roleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.my.ssm.bean.role">
    insert into role (id, name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.my.ssm.bean.role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.my.ssm.bean.roleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>